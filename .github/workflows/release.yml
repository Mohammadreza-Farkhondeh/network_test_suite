name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build binary
        run: |
          chmod +x ./build.sh
          ./build.sh

      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/network_test-linux-amd64
          asset_name: network_test-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/network_test-windows-amd64.exe
          asset_name: network_test-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Darwin Binary (amd64)
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/network_test-darwin-amd64
          asset_name: network_test-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload Darwin Binary (arm64)
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/network_test-darwin-arm64
          asset_name: network_test-darwin-arm64
          asset_content_type: application/octet-stream

